name: üîí ZAP Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  pages: write
  id-token: write

jobs:
  zap_scan:
    name: Run OWASP ZAP Baseline
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Docker network
        run: docker network create zapnet || true

      - name: Run Juice Shop container
        run: |
          docker run -d --rm --name juice-shop --network zapnet -p 3000:3000 bkimminich/juice-shop
          echo "üßÉ Waiting for Juice Shop to start..."
          sleep 20

      - name: Run OWASP ZAP Baseline Scan
        run: |
          mkdir -p zap-reports
          chmod 777 zap-reports
          echo "‚öôÔ∏è Starting ZAP baseline scan..."
          timeout 15m docker run --rm --user root \
            --network zapnet \
            -v ${{ github.workspace }}/zap-reports:/zap/wrk \
            zaproxy/zap-stable zap-baseline.py \
            -t http://juice-shop:3000 \
            -r zap_report.html \
            -J zap_report.json \
            -m 3 || true

      - name: Evaluate ZAP Results
        run: |
          sudo apt-get install -y jq > /dev/null
          if [ -f zap-reports/zap_report.json ]; then
            HIGH=$(jq '.site[]?.alerts[]? | select(.risk == "High")' zap-reports/zap_report.json | jq -s 'length')
            CRITICAL=$(jq '.site[]?.alerts[]? | select(.risk == "Critical")' zap-reports/zap_report.json | jq -s 'length')
            WARN=$(jq '.site[]?.alerts[]? | select(.risk == "Medium" or .risk == "Low")' zap-reports/zap_report.json | jq -s 'length')
          else
            echo "‚ö†Ô∏è ZAP report not found, assuming 0 vulnerabilities."
            HIGH=0
            CRITICAL=0
            WARN=0
          fi
          echo "üìä Vulnerabilities summary:"
          echo "   Critical: $CRITICAL"
          echo "   High:     $HIGH"
          echo "   Warn:     $WARN"
          if [ "$HIGH" -gt 0 ] || [ "$CRITICAL" -gt 0 ]; then
            echo "‚ùå High/Critical vulnerabilities detected!"
            exit 1
          else
            echo "‚úÖ No High/Critical vulnerabilities. Build passed."
          fi

      - name: Deploy ZAP Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./zap-reports
‚úÖ –ß—Ç–æ –º–µ–Ω—è–µ—Ç—Å—è –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ç–≤–æ–∏–º —Å—Ç–∞—Ä—ã–º YAML: